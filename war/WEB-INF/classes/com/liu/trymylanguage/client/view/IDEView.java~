package com.liu.trymylanguage.client.view;

import com.google.gwt.user.client.ui.Composite;
import com.liu.trymylanguage.client.presenter.IDEPresenter;
import com.google.gwt.user.client.ui.Widget;
import com.google.gwt.event.dom.client.HasKeyPressHandlers;
import com.google.gwt.event.dom.client.HasClickHandlers;
import com.google.gwt.user.client.ui.FlowPanel;
import com.google.gwt.user.client.ui.ListBox;
import com.google.gwt.user.client.ui.VerticalPanel;
import com.google.gwt.user.client.ui.SplitLayoutPanel;
import com.google.gwt.user.client.ui.Button;
import com.google.gwt.user.client.ui.TextArea;
import com.google.gwt.user.client.ui.RootLayoutPanel;
import com.google.gwt.user.client.ui.DockLayoutPanel;
import se.liu.gwt.widgets.client.CodeMirrorConf;
import se.liu.gwt.widgets.client.CodeMirror2;
import com.google.gwt.dom.client.Style.Unit;
import com.google.gwt.user.client.ui.HTML;
import com.google.gwt.user.client.ui.SimplePanel;

/**
 * Describe class IDEView here.
 *
 *
 * Created: Fri Dec  2 15:19:53 2011
 *
 * @author <a href="mailto:amir@amir-laptop">Amir Hossein Fouladi</a>
 * @version 1.0
 */
public class IDEView extends Composite implements IDEPresenter.Display{
    private SplitLayoutPanel mainPanel = new SplitLayoutPanel();

    private VerticalPanel editorPanel = new VerticalPanel();
    private Button runButton = new Button(" Run ");
    private Button upButton = new Button();
    private Button nextButton = new Button();
    private Button previousButton = new Button();
    private ListBox chooseLanguageBox = new ListBox();
    private TextArea tutorialArea = new TextArea();
    private TextArea consoleArea = new TextArea();
    private FlowPanel toolbarPanel = new FlowPanel();
    private CodeMirror2 editor;
    private CodeMirrorConf conf;
    public IDEView(){
	
	conf= new CodeMirrorConf();
	conf.setValue("test");
	conf.setMode("text/x-java");
	editor = new CodeMirror2(conf);
	


      
	toolbarPanel.add(runButton);
	toolbarPanel.add(chooseLanguageBox);

	//Attach widgets to editorPanel
	editorPanel.add(toolbarPanel);
	editorPanel.add(editor);
	
	
	
	
	//Adding widgets to panel areas
	mainPanel.addWest(tutorialArea,150);
	mainPanel.addNorth(editorPanel,384);
	mainPanel.add(consoleArea);
	
	// Attach 3 widgets to a DockLayoutPanel
	// Lay them out in 'em' units.
	DockLayoutPanel lp = new DockLayoutPanel(Unit.EM);
	lp.addNorth(new HTML("Try My Language"),2);
	lp.addSouth(new HTML("Footer"),2);
	lp.add(mainPanel);
	initWidget(lp);
	//Add mainPanel to the HTML element with mainPanel as id
	//RootLayoutPanel.get().add(lp);

    
    }
    public HasClickHandlers getRunButton(){
	return runButton;
    }
    public void setConsoleData(String data){
    
	consoleArea.setText(data);
    }
    public HasKeyPressHandlers getConsole(){
	return consoleArea;
    }
    public String getSelectedTabValue(){
	return editor.getValue();
    }
    public int getSelectedTabTypeId(){
	return 1;
    }
    public Widget asWidget(){
	return this;
    }

}
