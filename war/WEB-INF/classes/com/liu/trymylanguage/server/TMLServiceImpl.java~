package com.liu.trymylanguage.server;

import com.google.gwt.user.server.rpc.RemoteServiceServlet;
import com.liu.trymylanguage.client.TMLService;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import com.liu.trymylanguage.shared.ConsoleDTO;
import com.liu.trymylanguage.shared.CodeDTO;
import java.io.InputStreamReader;

public class TMLServiceImpl extends RemoteServiceServlet implements TMLService {
    public ConsoleDTO compile(CodeDTO code) {
	code.setFileName(this.fileName("class ([a-zA-Z_$][a-zA-Z\\d_$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$]*",code.getCode()));
	//System.out.println(fileName);
	BufferedWriter bfw = null;
	try {
	    bfw = new BufferedWriter(new FileWriter(code.getFileName()+".java"));
	    
	    bfw.write(code.getFileName(),0,code.getFileName().length());
	    bfw.flush();
	    //	} catch (IOException ex) {
	    // ex.printStackTrace();
	    //	}finally{
	    if (bfw !=null) {
		bfw.close();		
	    }
	    
	    
	    
	    //}
	    
	    
	    Process p;
	    //try {
	    p = Runtime.getRuntime().exec("javac "+code.getFileName()+".java");
	    p = Runtime.getRuntime().exec("java -cp . "+code.getFileName());
	    BufferedReader bfr  = new BufferedReader(new InputStreamReader(p.getInputStream()));
	    String line;
	    while((line=bfr.readLine())!=null)
		line=line+bfr.readLine();
	    bfr.close();
	    return new ConsoleDTO(line,true);
	} catch (IOException ex) {
	    ex.printStackTrace();
	}
	
	return null;
	
    } 
    public ConsoleDTO run(CodeDTO code){
	return this.compile(code);
    }

    public String fileName(String patternstr, String code) {
	Pattern pattern = Pattern.compile(patternstr);
	Matcher matcher = pattern.matcher(code);
	if(matcher.find())
	    return  code.substring(matcher.start()+6,matcher.end()).trim();
	else 
	    return "default";
    }
}